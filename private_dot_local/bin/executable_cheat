#!/usr/bin/env bash

e () {
  echo -e "\033[1;34m$1\033[0m"
}

cat <<EOF
$(e Cheatsheet:)
  * $(e choose)     - Use instead of cut/awk | * $(e curlie)  - curl with colors
  * $(e dasel)      - json/toml/yaml/xml/csv | * $(e delta)   - diff tool
  * $(e duf)        - df, list drive info    | * $(e dust)    - du, files/dir size as tree
  * $(e entr)       - watch change, run task | * $(e fd)      - find alternative
  * $(e forgit)     - TODO                   | * $(e fq)      - parse binary formats
  * $(e git-extra)  - extra git commands     | * $(e gh)      - github cli
  * $(e glow)       - cli md previews        | * $(e grex)    - generate regex from tests
  * $(e hyperfine)  - benchmark cli          | * $(e lazygit) - tui for git
  * $(e parallel)   - xargs but parallel     | * $(e tldr)    - cheatsheets for commands
  * $(e tokei)      - github style loc/lang  | * $(e s)       - web search from cli
  * $(e sd)         - sed with better regex  | * $(e xh)      - http requests
  * $(e lazydocker) - tui for docker         | * $(e zi)      - fzf cd using zoxide   
  * $(e scratch)    - nvim scratch pad       | * $(e vf)      - fzf into vim   
  * $(e antidot)    - move files to xdg      | * $(e vf)      - fzf into vim   

$(e 'Poweline git symbol info:') <branch> <ongoing action> ⇣1 ⇡2 *3 ~4 +5 !6 ?7
  $(e '⇣1') - commits behind remote  | $(e '⇡2') - commits ahead of the remote
  $(e '*3') - stashes                | $(e '~4') - merge conflicts
  $(e '+5') - staged changes         | $(e '!6') - unstaged changes
  $(e '?7') - untracked files        |

$(e 'Conventional Commit Docs:')
  <fix, feat, build, chore, ci, docs, perf, style, refactor, test>(optional scope)!: <description>

  BREAKING CHANGE: in body if something broke

  Co-authored-by: name <user@users.noreply.github.com>

$(e Keybinds):
                  $(e shell)                    |            $(e nvim)
  * $(e CTRL-f) -> fzf search for file and nvim | * $(e '<leader>ff') - find by name and edit
  * $(e CTRL-m) -> fzf search for text and nvim | * $(e '<leader>fw') - find by text and edit
  * $(e CTRL-j) -> find replace using sad?      |
  * $(e CTRL-h) -> fzf Change directory         |
  * $(e CTRL-o) -> use the scratch function     |
EOF
