[core]
  # consider trailing space and space before a tab an error
  whitespace = trailing-space,space-before-tab
  # use the fs monitor to speed up git
  fsmonitor = true
  # use git-delta, aka delta to get better diffs
  pager = delta
[help]
  # 1 seconds before git command auto corrects
  autocorrect = 10

[checkout]
  # use number of cores on the cpu to determine how many workers to use
  workers = 0

[commit]
  # show a small diff when committing
  # use a git commit template to help make good commits
  template = ~/.config/git/commit-template

[diff]
  # use values with real meaning for diffs, instead of just a and b
  mnemonicprefix = true
  # detect moves or copies as renames
  renames = copies
  # show moved lines in a different color than add/remove
  colorMoved = default
  # only give a commit summary of submodules not a diff
  ignoreSubmodules = dirty

[fetch]
  # use whatever git things is best
  parallel = 0
# re-config below here
[user]
  # Force local repo-level configuration for email
  useConfigOnly = true

[alias]
  pushf = push --force-with-lease
  ammend = commit --amend
  amend = commit --amend
  commitv = commit --verbose
  diff-his = diff --diff-algorithm=histogram
  diff-min = diff --diff-algorithm=minimal
  diff-pat = diff --diff-algorithm=patience
  diff-word = diff --word-diff
  root = rev-parse --show-toplevel
  up = !git fetch && git pull
  fix = commit --amend -a -C HEAD

[rerere]
  # save conflict resolutions
  enabled = true
  # automatically do them
  autoUpdate = true

[column]
  # allow showing things as columns rather than a long new-line separated list
	ui = auto

[branch]
  # sort branches when listed by committerdate
	sort = -committerdate

[init]
  # use main for the default during git init as its more correct
  defaultBranch = main

[merge]
  # three panes for merge
  tool = nvimdiff3

[pack]
  # Use any number of threads if possible
  threads = 0

[push]
  # assume the remote branch has the same name as the local one
  autoSetupRemote = true

[pull]
  # apply remote changes before my local changes as they already exist
  rebase = true

[fetch]
  # auto prune local branches when a merge or delete is detected on origin
  prune = true
  parallel = 0

[hub]
  protocol = ssh
[delta]
  line-numbers = true

